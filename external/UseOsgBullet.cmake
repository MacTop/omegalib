# Extract bullet binaries
set(EXTLIB_NAME bullet)
set(EXTLIB_TGZ ${CMAKE_SOURCE_DIR}/external/${EXTLIB_NAME}.tar.gz)
set(EXTLIB_DIR ${CMAKE_BINARY_DIR}/${EXTLIB_NAME})

if(NOT EXISTS ${EXTLIB_DIR})
  execute_process(COMMAND ${CMAKE_COMMAND} -E tar xzf
    ${EXTLIB_TGZ} WORKING_DIRECTORY ${CMAKE_BINARY_DIR})
endif(NOT EXISTS ${EXTLIB_DIR})

#find bullet
include(FindBulletHelper)
#include bullet
include_directories(
	${BULLET_INCLUDE_DIRS}
    ${BULLET_EXTRAS_INCLUDE_DIR}
)

# Add external project osgBullet
ExternalProject_Add(
	osgBullet
	URL ${CMAKE_SOURCE_DIR}/external/osgbullet.tar.gz
	CMAKE_GENERATOR ${OSGWORKS_GENERATOR}
	CMAKE_ARGS 
		-DCMAKE_SHARED_LINKER_FLAGS:STRING="${CMAKE_SHARED_LINKER_FLAGS} /NODEFAULTLIB:msvcprt.lib /NODEFAULTLIB:libcpmt.lib"
		-DCMAKE_LINKER_FLAGS:STRING="${CMAKE_LINKER_FLAGS} /NODEFAULTLIB:libcpmt.lib /NODEFAULTLIB:msvcprt.lib"
		-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
		-DCMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG:PATH=${CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG}
		-DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE:PATH=${CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE}
		-DOSGInstallType:STRING="Alternate Install Location"
		-DOSGInstallLocation:PATH=${OSG_BINARY_DIR}
		-DBUILD_SHARED_LIBS:BOOLEAN=false
		-DOSGBULLET_BUILD_APPLICATIONS=OFF
		-DOSGBULLET_BUILD_EXAMPLES=OFF
		-DOSGBULLET_INSTALL_DATA=OFF
		#Bullet
		-DBulletInstallType:STRING="Alternate Install Location"
		-DBulletInstallLocation:PATH=${CMAKE_BINARY_DIR}/${EXTLIB_NAME}
		#osgWorks
		-DosgWorks_DIR:PATH=${CMAKE_BINARY_DIR}/src/osgWorks-prefix/src/osgWorks-build/lib
		#osg
		-DOSG_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOSG_LIBRARY:PATH=${osg_LIBRARY}
		-DOSG_LIBRARY_DEBUG:PATH=${osg_LIBRARY_DEBUG}
		#osgGA
		-DOSGGA_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOSGGA_LIBRARY:PATH=${osgGA_LIBRARY}
		-DOSGGA_LIBRARY_DEBUG:PATH=${osgGA_LIBRARY_DEBUG}
		#osgText
		-DOSGTEXT_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOSGTEXT_LIBRARY:PATH=${osgText_LIBRARY}
		-DOSGTEXT_LIBRARY_DEBUG:PATH=${osgText_LIBRARY_DEBUG}
		#osgViewer
		-DOSGVIEWER_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOSGVIEWER_LIBRARY:PATH=${osgViewer_LIBRARY}
		-DOSGVIEWER_LIBRARY_DEBUG:PATH=${osgViewer_LIBRARY_DEBUG}
		#osgSim
		-DOSGSIM_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOSGSIM_LIBRARY:PATH=${osgSim_LIBRARY}
		-DOSGSIM_LIBRARY_DEBUG:PATH=${osgSim_LIBRARY_DEBUG}
		#osgDB
		-DOSGDB_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOSGDB_LIBRARY:PATH=${osgDB_LIBRARY}
		-DOSGDB_LIBRARY_DEBUG:PATH=${osgDB_LIBRARY_DEBUG}
		#osgUtil
		-DOSGUTIL_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOSGUTIL_LIBRARY:PATH=${osgUtil_LIBRARY}
		-DOSGUTIL_LIBRARY_DEBUG:PATH=${osgUtil_LIBRARY_DEBUG}
		#osgShadow
		-DOSGSHADOW_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOSGSHADOW_LIBRARY:PATH=${osgShadow_LIBRARY}
		-DOSSHADOW_LIBRARY_DEBUG:PATH=${osgShadow_LIBRARY_DEBUG}
		#openthreads
		-DOPENTHREADS_INCLUDE_DIR:PATH=${OSG_INCLUDES}
		-DOPENTHREADS_LIBRARY:PATH=${OpenThreads_LIBRARY}
		-DOPENTHREADS_LIBRARY_DEBUG:PATH=${OpenThreads_LIBRARY_DEBUG}
		INSTALL_COMMAND ""
	)
add_dependencies(osgBullet osgWorks osg)

set(OSGBULLET_BASE_DIR ${CMAKE_BINARY_DIR}/src/osgBullet-prefix/src)
set(OSGBULLET_INCLUDES ${OSGBULLET_BASE_DIR}/osgBullet/include)

set(OSGBULLET_LIB_DIR ${OSGBULLET_BASE_DIR}/osgBullet-build/lib)
set(OSGBULLET_COMPONENTS osgbCollision osgbDynamics osgbInteraction)
if(OMEGA_OS_WIN)
	foreach( C ${OSGBULLET_COMPONENTS})
		set(${C}_LIBRARY ${OSGBULLET_LIB_DIR}/Release/${C}.lib)
		set(${C}_LIBRARY_DEBUG ${OSGBULLET_LIB_DIR}/Debug/${C}d.lib)
		set(OSGBULLET_LIBS ${OSGBULLET_LIBS} optimized ${${C}_LIBRARY} debug ${${C}_LIBRARY_DEBUG})
	endforeach()
elseif(OMEGA_OS_LINUX)
    foreach( C ${OSGBULLET_COMPONENTS} )
		set(${C}_LIBRARY ${OSGBULLET_LIB_DIR}/lib${C}.a)
		set(${C}_LIBRARY_DEBUG ${OSGBULLET_LIB_DIR}/lib${C}.a)
		set(OSGBULLET_LIBS ${OSGBULLET_LIBS} optimized ${${C}_LIBRARY} debug ${${C}_LIBRARY_DEBUG})
	endforeach()
elseif(APPLE)
	foreach( C ${OSGBULLET_COMPONENTS} )
		set(${C}_LIBRARY ${OSGBULLET_LIB_DIR}/lib${C}.a)
		set(${C}_LIBRARY_DEBUG ${OSGBULLET_LIB_DIR}/lib${C}.a)
		set(OSGBULLET_LIBS ${OSGBULLET_LIBS} optimized ${${C}_LIBRARY} debug ${${C}_LIBRARY_DEBUG})
	endforeach()
endif(OMEGA_OS_WIN)